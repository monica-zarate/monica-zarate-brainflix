{"ast":null,"code":"var _jsxFileName = \"/Users/monicazhazil/Documents/2020 Web Development/monica-zarate-brainflix/sprint-three/client/src/components/Main.jsx\";\nimport React from \"react\";\nimport \"./styles/main.css\";\nimport Video from \"./Video\";\nimport Comments from \"./Comments\";\nimport Queue from \"./Queue\";\nimport Description from \"./Video-description\";\nimport Axios from \"axios\"; // const apiKey = \"94d45313-a526-444a-ae41-67acf941a5e8\";\n\nconst videosApi = \"http://localhost:5000/videos/\";\n\nclass Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentVideo: {\n        comments: []\n      },\n      queue: []\n    };\n  }\n\n  // Calling API to retrieve data for Main Video and Video Queue then assigning data to State.\n  getVideo(videoId) {\n    Axios.get(`${videosApi}+${videoId}`).then(response => {\n      this.setState({\n        currentVideo: response.data\n      });\n    }).catch(error => console.log(error));\n  }\n\n  getQueue() {\n    Axios.get(videosApi).then(response => {\n      console.log(response);\n      this.setState({\n        queue: response.data\n      });\n      console.log(this.state.queue);\n    }).catch(error => console.log(error));\n  } // Calling the getQueue and getVideo Functions once the component Main gets mounted. Set the default video to index 0 of the Data Array.\n\n\n  componentDidMount() {\n    console.log(\"component mounted\");\n    this.getQueue();\n    this.getVideo(\"1af0jruup5gu\");\n  } // If Else Function that prevents infinite calls to the API by comparing the previous Id with the new Id, if it's the same there won't be another API call.\n\n\n  componentDidUpdate(prevProps) {\n    const oldVideoId = prevProps.match.params.id;\n    const newVideoId = this.props.match.params.id;\n\n    if (newVideoId === oldVideoId) {\n      console.log(\"same video Id\");\n    } else {\n      console.log(\"getting new video\");\n      this.getVideo(newVideoId);\n    }\n  } // Added the filter Function to the Queue Component to prevent the Main Video to be displayed on the Video Queue.\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"main\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Video, {\n      currentVideo: this.state.currentVideo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"main\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Description, {\n      currentVideo: this.state.currentVideo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Comments, {\n      comments: this.state.currentVideo.comments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Queue, {\n      queue: this.state.queue.filter(video => video.id !== this.state.currentVideo.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/monicazhazil/Documents/2020 Web Development/monica-zarate-brainflix/sprint-three/client/src/components/Main.jsx"],"names":["React","Video","Comments","Queue","Description","Axios","videosApi","Main","Component","state","currentVideo","comments","queue","getVideo","videoId","get","then","response","setState","data","catch","error","console","log","getQueue","componentDidMount","componentDidUpdate","prevProps","oldVideoId","match","params","id","newVideoId","props","render","filter","video"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./styles/main.css\";\nimport Video from \"./Video\";\nimport Comments from \"./Comments\";\nimport Queue from \"./Queue\";\nimport Description from \"./Video-description\";\nimport Axios from \"axios\";\n\n// const apiKey = \"94d45313-a526-444a-ae41-67acf941a5e8\";\n\nconst videosApi = \"http://localhost:5000/videos/\";\n\nclass Main extends React.Component {\n  // Set blank state.\n  state = {\n    currentVideo: {\n      comments: [],\n    },\n    queue: [],\n  };\n\n  // Calling API to retrieve data for Main Video and Video Queue then assigning data to State.\n  getVideo(videoId) {\n    Axios.get(`${videosApi}+${videoId}`)\n      .then((response) => {\n        this.setState({ currentVideo: response.data });\n      })\n\n      .catch((error) => console.log(error));\n  }\n\n  getQueue() {\n    Axios.get(videosApi)\n      .then((response) => {\n        console.log(response);\n        this.setState({ queue: response.data });\n        console.log(this.state.queue);\n      })\n      .catch((error) => console.log(error));\n  }\n\n  // Calling the getQueue and getVideo Functions once the component Main gets mounted. Set the default video to index 0 of the Data Array.\n  componentDidMount() {\n    console.log(\"component mounted\");\n    this.getQueue();\n    this.getVideo(\"1af0jruup5gu\");\n  }\n\n  // If Else Function that prevents infinite calls to the API by comparing the previous Id with the new Id, if it's the same there won't be another API call.\n  componentDidUpdate(prevProps) {\n    const oldVideoId = prevProps.match.params.id;\n    const newVideoId = this.props.match.params.id;\n    if (newVideoId === oldVideoId) {\n      console.log(\"same video Id\");\n    } else {\n      console.log(\"getting new video\");\n      this.getVideo(newVideoId);\n    }\n  }\n\n  // Added the filter Function to the Queue Component to prevent the Main Video to be displayed on the Video Queue.\n  render() {\n    return (\n      <>\n        <main className=\"main\">\n          <Video currentVideo={this.state.currentVideo} />\n        </main>\n        <main className=\"content\">\n          <div className=\"content__wrapper\">\n            <Description currentVideo={this.state.currentVideo} />\n            <Comments comments={this.state.currentVideo.comments} />\n          </div>\n          <Queue\n            queue={this.state.queue.filter(\n              (video) => video.id !== this.state.currentVideo.id\n            )}\n          />\n        </main>\n      </>\n    );\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}